[ { "title": "What is ssh and how ssh-copy-id works?", "url": "/posts/ssh-copy-id/", "categories": "ssh, Linux", "tags": "ssh, ssh-keygen, ssh-copy-id", "date": "2022-12-31 13:00:00 +0100", "snippet": "SSH, or Secure Shell, is a network protocol used to securely connect to a remote computer. It is commonly used for remote command-line access and remote command execution, but can also be used for secure network communication between two servers.How ssh works?One important aspect of using SSH is the use of SSH keys, which are used to authenticate the client to the server. In order to use SSH keys for authentication, you first need to generate a public and private key pair on your local machine. The private key remains on your local machine and is used to authenticate your connection to the server. The public key, on the other hand, is copied to the server and is used to verify the authenticity of the private key.What is ssh-keygen?ssh-keygen is a tool for creating new authentication key pairs for SSH. Such key pairs are used for automating logins, single sign-on, and for authenticating hostGenerate an SSH Key Pair on UNIX and UNIX-Like SystemsTo generate an SSH key pair, you can use the ssh-keygen command. This command will prompt you for a location to save the key pair and a passphrase (optional). It is recommended to use a passphrase for added security. The ssh-keygen command will generate both a public and private key.Run the ssh-keygen command. (You can use the -t option to specify the type of key to create.)ssh-keygen -t rsaYou can use the -b option to specify the length (bit size) of the key, as shown in the following example:ssh-keygen -t rsa -b 4096Copy ssh key on your serverOnce you have generated your SSH key pair, you can copy the public key to the remote server by using the ssh-copy-id command. This command will copy your public key to the ~/.ssh/authorized_keys file on the remote server, which is used to store the public keys of clients that are allowed to authenticate using SSH.Here is an example of how to use ssh-copy-id to copy your public key to a remote server:ssh-copy-id user@remote_serverReplace user with the username on the remote server and remote_server with the hostname or IP address of the remote server. You will be prompted for the password of the user on the remote server.Test your connectionOnce you have copied your public key to the remote server, you should be able to use your private key to authenticate to the server using SSH. To do so, you can use the ssh command with the -i option to specify the path to your private key:ssh -i /path/to/private_key user@remote_serverReplace /path/to/private_key with the path to your private key file and user and remote_server with the appropriate values for your setup.In summary, SSH keys provide a secure and convenient way to authenticate to a remote server using SSH. To use SSH keys, you need to generate a public and private key pair on your local machine and copy the public key to the remote server using the ssh-copy-id command. You can then use your private key to authenticate to the remote server using the ssh command with the -i option." }, { "title": "Installing and Using Zerotier VPN on a Linux Machine", "url": "/posts/zerotier-on-linux/", "categories": "VPN, Zerotier, Linux", "tags": "VPN", "date": "2022-12-28 00:00:00 +0100", "snippet": "Zerotier is a popular virtual private network VPN service that allows users to connect their devices together securely over the internet. It is easy to set up and use, and offers a range of features such as network bridging, remote access, and support for multiple protocols. In this tutorial, we will walk through the process of installing and using Zerotier on a Linux machine.PrerequisitesBefore you can install Zerotier, you will need to ensure that your Linux machine meets the following requirements: A 64-bit processor At least 4GB of RAM An internet connectionInstalling ZerotierTo install Zerotier on your Linux machine, follow these steps:If you`re willing to rely on SSL to authenticate the site, a one line install can be done with:curl -s https://install.zerotier.com | sudo bashIf you have GPG installed, a more secure option is available:curl -s &#39;https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg&#39; | gpg --import &amp;amp;&amp;amp; \\if z=$(curl -s &#39;https://install.zerotier.com/&#39; | gpg); then echo &quot;$z&quot; | sudo bash; fiOnce the installation is complete, start the Zerotier service using the following command:sudo systemctl start zerotier-oneEnable the Zerotier service to start automatically at boot time using the following command:sudo systemctl enable zerotier-oneJoining a Zerotier NetworkTo join a Zerotier network, you will need to install Zerotier on the device that you want to connect to the network. Follow the instructions in the “Installing Zerotier” section above to install Zerotier on your device.Once Zerotier is installed, you can join a network by following these steps:Get your ZeroTier address and check the service statuszerotier-cli statusJoin, leave, and list networks. Remember, ZeroTier networks are 16-digit IDs that look like 8056c2e21c000001zerotier-cli join ################zerotier-cli leave ################zerotier-cli listnetworks" }, { "title": "Working with multiple remotes repositories", "url": "/posts/git-multiple-remotes/", "categories": "Git, Source control", "tags": "git", "date": "2022-11-29 16:00:00 +0100", "snippet": "This post will guide you how to work with git remotes and push to multiple repositories with a single command. If you don’t know what git is, you should probably read about it before you continue.PrerequisitesBasic knowledge of the following git commands:git initgit pullgit commitgit pushHave a write access to one or more remote git repositoriesDefining multiple remotesThe first step is to add remote repos to your projectgit remote add REMOTE-ID REMOTE-URL Syntax to add a git remoteBy convention, the original / primary remote repo is called origin. Here’s a real example:git remote add origin git@github.com:komluk/repository.git Add remote 1: GitHubgit remote add upstream git@devops.com:komluk/repository.git Add remote 2: Azure DevOpsChange remote urlIf you want to change the URL associated to a remote that you’ve already added, you can do it with the following command:git remote set-url upstream git@github.com:komluk/repository2.gitList all remotesTo see a list of all remotes, simply use the following command:git remote -vorigin git@github.com:komluk/repository.git (fetch)origin git@github.com:komluk/repository.git (push)upstream git@devops.com:komluk/repository.git (fetch)upstream git@devops.com:komluk/repository.git (push)Push to multiple remotesNow we have a primary remote repo and other remotes as well, it’s time to configure the push. The objective is to push to multiple Git remotes with a single git push command.git remote add all git@github.com:komluk/repository.git Create a new remote called all with the URL of the primary repo.git remote set-url --add --push all git@github.com:komluk/repository.git Re-register the remote as a push URL.git remote set-url --add --push all git@devops.com:komluk/repository.git Add a push URL to a remote. This means that “git push” will also push to the second git repository.Now, we can push to all remote repositories with a single command!git push --all BRANCH Replace BRANCH with the name of the branch you want to push.Pull from multiple remotesIt is not possible to git pull from multiple repos. However, you can git fetch from multiple repos with the following command:git fetch --allgit checkout BRANCH Checkout the branch you want to work with.git merge remotes/upstream/main Merge from remotes to main branchgit reset --hard REMOTE-ID/BRANCH Reset the branch to match the state as on a specific remote." }, { "title": "How to remove Proxmox Subscription Notice?", "url": "/posts/remove-proxmox-subscription-notice/", "categories": "Proxmox", "tags": "proxmox, ssh", "date": "2022-04-15 14:00:00 +0200", "snippet": "Proxmox Virtual Environment is a popular open-source virtualization platform used by many organizations and individuals to run and manage virtual machines. While the Proxmox platform is free to use, it comes with a subscription notice that can be quite annoying. The subscription notice reminds users that they are using a free version of the platform and encourages them to purchase a subscription to access additional features and support. In this blog post, we’ll show you how to remove the Proxmox subscription notice.Before we get started, it’s important to note that Proxmox relies on community support and contributions to maintain and improve the platform. If you find the platform useful, we encourage you to consider purchasing a subscription to support its continued development.Now, let’s get started with removing the Proxmox subscription notice.Step 1: SSH into your Proxmox serverThe first step is to SSH into your Proxmox server. If you’re using a Windows machine, you can use an SSH client like PuTTY. If you’re using a Mac or Linux machine, you can use the built-in terminal.Step 2: Edit the subscription fileOnce you’re logged in, navigate to the /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js file using the following command:nano /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.jsThis will open the file in the nano text editor. Use the arrow keys to navigate to the following line:if (data.status !== &#39;Active&#39;) {Step 3: Comment out the subscription noticeTo remove the subscription notice, you need to comment out the line of code you located in Step 2. To do this, add two forward slashes at the beginning of the line, like this:// if (data.status !== &#39;Active&#39;) {Step 4: Save the fileOnce you’ve commented out the line, save the file by pressing Ctrl + X, then Y, then Enter.Step 5: Restart the Proxmox web serviceRestart the Proxmox web service (also be sure to clear your browser cache, depending on the browser you may need to open a new tab or restart the browser)systemctl restart pveproxy.serviceStep 6: Clear your browser cacheFinally, you need to clear your browser cache to see the changes. This can typically be done by pressing Ctrl + Shift + R.And that’s it! You should no longer see the Proxmox subscription notice. However, keep in mind that this is a temporary solution and may be overwritten during future Proxmox updates. To ensure a permanent solution, you may want to consider purchasing a Proxmox subscription.In conclusion, removing the Proxmox subscription notice is a simple process that can be completed in just a few steps.However, we encourage users to consider purchasing a subscription to support the development of the Proxmox platform." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2022-01-20 16:00:00 +0100", "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:---author: name: Full Name link: https://example.com---Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=&quot;700&quot; h=&quot;400&quot; }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. Once the position is specified, the image caption should not be added. Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&amp;lt;img src=&quot;/img/path/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute src, width, height, and alt for the image:---image: src: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the attribute src only needs the image file name.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are three types of prompts, note, warning and danger. When writing, add the class prompt-{type} to a blockquote: Note &amp;gt; Example line for prompt.{: .prompt-note } Warning &amp;gt; Example line for prompt.{: .prompt-warning } Danger &amp;gt; Example line for prompt.{: .prompt-danger } SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho &#39;No more line numbers!&#39;```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=&quot;path/to/file&quot; }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains &#39;Pack&#39; %} This product&#39;s title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2022-01-19 21:55:00 +0100", "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler. In addition, Git is also required to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme: Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing. Forking on GitHub - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterCreate a new repository from the Chirpy Starter and name it &amp;lt;GH_USERNAME&amp;gt;.github.io, where GH_USERNAME represents your GitHub username.Option 2. Forking on GitHubFork Chirpy on GitHub and rename it to &amp;lt;GH_USERNAME&amp;gt;.github.io. Please note that the default branch code is in development. If you want the site to be stable, please switch to the latest tag and start writing.And then execute:$ bash tools/init.sh If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will: Removes some files or directories from your repository: .travis.yml files under _posts folder docs If the option --no-gh is provided, the directory .github will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension .hook of .github/workflows/pages-deploy.yml.hook, and then remove the other files and directories in the folder .github. Removes item Gemfile.lock from .gitignore. Creates a new commit to save the changes automatically.Installing DependenciesBefore running for the first time, go to the root directory of your site, and install dependencies as follows:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options: url avatar timezone langCustoming StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of the style file.Starting from v4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, create a new file _sass/variables-hook.scss and assign new values to the target variable in it.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\ --volume=&quot;$PWD:/srv/jekyll&quot; \\ -p 4000:4000 jekyll/jekyll \\ jekyll serveAfter a while, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using Github ActionsFor security reasons, GitHub Pages build runs on safe mode, which restricts us from using plugins to generate additional page files. Therefore, we can use GitHub Actions to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.Quickly check the files needed for GitHub Actions build: Ensure your Jekyll site has the file .github/workflows/pages-deploy.yml. Otherwise, create a new one and fill in the contents of the sample file, and the value of the on.push.branches should be the same as your repo’s default branch name. Ensure your Jekyll site has file tools/deploy.sh. Otherwise, copy it from here to your Jekyll site. Furthermore, if you have committed Gemfile.lock to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file: $ bundle lock --add-platform x86_64-linux After the above steps, rename your repository to &amp;lt;GH_USERNAME&amp;gt;.github.io on GitHub.Now publish your Jekyll site by: Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named gh-pages will appear to store the built site files. Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar, and then in the section Source of GitHub Pages, select the /(root) directory of branch gh-pages as the publishing source. Remember to click Save before leaving. Visit your website at the address indicated by GitHub. Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\ --env JEKYLL_ENV=production \\ --volume=&quot;$PWD:/srv/jekyll&quot; \\ jekyll/jekyll \\ jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server.UpgradingIt depends on how you use the theme: If you are using the theme gem (there will be gem &quot;jekyll-theme-chirpy&quot; in the Gemfile), editing the Gemfile and update the version number of the theme gem, for example: - gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.2&quot;, &quot;&amp;gt;= 3.2.1&quot;+ gem &quot;jekyll-theme-chirpy&quot;, &quot;~&amp;gt; 3.3&quot;, &quot;&amp;gt;= 3.3.0&quot; And then execute the following command: $ bundle update jekyll-theme-chirpy As the version upgrades, the critical files (for details, see the Startup Template) and configuration options will change. Please refer to the Upgrade Guide to keep your repo’s files in sync with the latest version of the theme. If you forked from the source project (there will be gemspec in the Gemfile of your site), then merge the latest upstream tags into your Jekyll site to complete the upgrade.The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts. " } ]
